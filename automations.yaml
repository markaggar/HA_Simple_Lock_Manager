# Add this to your automations.yaml file and go to developer tools and reload

- id: '1670785713428'
  alias: .locks set codes
  description: set key codes on locks (replacement for keymaster)
  trigger:
  - platform: state
    entity_id:
    - input_text.lock_code_slot_1_pin
    - input_text.lock_code_slot_2_pin
    - input_text.lock_code_slot_3_pin
    - input_text.lock_code_slot_4_pin
    - input_text.lock_code_slot_5_pin
    - input_text.lock_code_slot_6_pin
    - input_text.lock_code_slot_7_pin
    - input_text.lock_code_slot_8_pin
    for:
      hours: 0
      minutes: 0
      seconds: 5
    id: PIN
  - platform: state
    entity_id:
    - input_boolean.lock_code_slot_1_state
    - input_boolean.lock_code_slot_2_state
    - input_boolean.lock_code_slot_3_state
    - input_boolean.lock_code_slot_4_state
    - input_boolean.lock_code_slot_5_state
    - input_boolean.lock_code_slot_6_state
    - input_boolean.lock_code_slot_7_state
    - input_boolean.lock_code_slot_8_state
    id: Disable
    to: 'off'
  - platform: state
    entity_id:
    - input_boolean.lock_code_slot_1_state
    - input_boolean.lock_code_slot_2_state
    - input_boolean.lock_code_slot_3_state
    - input_boolean.lock_code_slot_4_state
    - input_boolean.lock_code_slot_5_state
    - input_boolean.lock_code_slot_6_state
    - input_boolean.lock_code_slot_7_state
    - input_boolean.lock_code_slot_8_state
    id: PIN
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: PIN
      - condition: template
        value_template: '{% set mysensor = "input_boolean.lock_code_slot_" ~ (trigger.entity_id
          | replace(''.'',''z'') | list | sort | first | int) ~ "_state" %}

          {{is_state(mysensor,''on'')}} '
      sequence:
      - service: zwave_js.set_lock_usercode
        data:
          usercode: '{% set mysensor = "input_text.lock_code_slot_" ~ (trigger.entity_id
            | replace(''.'',''z'') | list | sort | first | int) ~ "_PIN" %}   {{states(mysensor)}}'
          code_slot: '{{trigger.entity_id | replace(''.'',''z'') | list | sort | first
            | int}}'
        target:
          entity_id:
          - lock.lock_deck_north_door
          - lock.lock_front_door
          - lock.garage_side_door_lock
        enabled: true
    - conditions:
      - condition: trigger
        id: Disable
      sequence:
      - service: zwave_js.clear_lock_usercode
        data:
          code_slot: '{{trigger.entity_id | replace(''.'',''z'') | list | sort | first
            | int}}'
        target:
          entity_id:
          - lock.lock_deck_north_door
          - lock.lock_front_door
          - lock.garage_side_door_lock
  mode: queued
  max: 10
- id: '1670803192634'
  alias: .lock notify
  description: ''
  trigger:
  - platform: event
    event_type: zwave_js_notification
    event_data:
      command_class: 113
      command_class_name: Notification
      label: Access Control
      type: 6
      event: 6
      event_label: Keypad unlock operation
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: '{{trigger.event | replace(''>'','''') | last}}'
    target:
      entity_id: input_text.last_lock_unlock_code_slot
  - choose:
    - conditions:
      - condition: template
        value_template: "    {% set mysensor = \"input_boolean.lock_code_slot_\" ~
          states('input_text.last_lock_unlock_code_slot') ~ \"_notify\" %}  \n    {{is_state(mysensor,
          'on') }}\n"
      sequence:
      - service: notify.parents # change this to your notification service
        data:
          message: '{% set namesensor = "input_text.lock_code_slot_" ~ states(''input_text.last_lock_unlock_code_slot'')
            ~ "_name" %} {{ states(namesensor)}} unlocked the door via keypad at {{as_timestamp(states.input_text.last_lock_unlock_code_slot.last_changed)
            | timestamp_custom("%H:%M:%S",local=True)}}'
  mode: single
